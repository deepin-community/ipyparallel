.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.8.
.TH IPCONTROLLER "1" "September 2020" "ipyparallel 6.2.4" "User Commands"
.SH NAME
ipcontroller \- starts an IPython cluster controller
.SH DESCRIPTION
Start the IPython controller for parallel computing.
.PP
The IPython controller provides a gateway between the IPython engines and
clients. The controller needs to be started before the engines and can be
configured using command line options or using a cluster directory. Cluster
directories contain config, log and security files and are usually located in
your ipython directory and named as "profile_name". See the `profile` and
`profile\-dir` options for details.
.PP
Options
\fB\-\-\-\-\-\-\-\fR
.PP
Arguments that take values are actually convenience aliases to full
Configurables, whose aliases are listed on the help line. For more information
on full configurables, see '\-\-help\-all'.
.PP
\fB\-\-log\-to\-file\fR
.IP
send log output to a file
.PP
\fB\-\-debug\fR
.IP
set log level to logging.DEBUG (maximize logging output)
.PP
\fB\-\-quiet\fR
.IP
set log level to logging.CRITICAL (minimize logging output)
.PP
\fB\-\-init\fR
.TP
Initialize profile with default config files.
This is equivalent
.IP
to running `ipython profile create <profile>` prior to startup.
.PP
\fB\-\-usethreads\fR
.IP
Use threads instead of processes for the schedulers
.PP
\fB\-\-sqlitedb\fR
.IP
use the SQLiteDB backend
.PP
\fB\-\-mongodb\fR
.IP
use the MongoDB backend
.PP
\fB\-\-dictdb\fR
.IP
use the in\-memory DictDB backend
.PP
\fB\-\-nodb\fR
.IP
use dummy DB backend, which doesn't store any information.
.IP
This is the default as of IPython 0.13.
.IP
To enable delayed or repeated retrieval of results from the Hub,
select one of the true db backends.
.PP
\fB\-\-reuse\fR
.IP
reuse existing json connection files
.PP
\fB\-\-restore\fR
.TP
Attempt to restore engines from a JSON file.
For use when resuming a crashed controller
.PP
\fB\-\-secure\fR
.IP
Use HMAC digests for authentication of messages.
Setting this flag will generate a new UUID to use as the HMAC key.
.PP
\fB\-\-no\-secure\fR
.IP
Don't authenticate messages.
.PP
\fB\-\-ssh=\fR<Unicode> (IPControllerApp.ssh_server)
.IP
Default: ''
ssh url for clients to use when connecting to the Controller processes. It
should be of the form: [user@]server[:port]. The Controller's listening
addresses must be accessible from the ssh server
.PP
\fB\-\-enginessh=\fR<Unicode> (IPControllerApp.engine_ssh_server)
.IP
Default: ''
ssh url for engines to use when connecting to the Controller processes. It
should be of the form: [user@]server[:port]. The Controller's listening
addresses must be accessible from the ssh server
.PP
\fB\-\-location=\fR<Unicode> (IPControllerApp.location)
.IP
Default: 'pesto'
The external IP or domain name of the Controller, used for disambiguating
engine and client connections.
.PP
\fB\-\-url=\fR<Unicode> (HubFactory.url)
.IP
Default: ''
The 0MQ url used for registration. This sets transport, ip, and port in one
variable. For example: url='tcp://127.0.0.1:12345' or url='epgm://*:90210'
.PP
\fB\-\-ip=\fR<Unicode> (HubFactory.ip)
.IP
Default: ''
The IP address for registration.  This is generally either '127.0.0.1' for
loopback only or '*' for all interfaces.
.PP
\fB\-\-transport=\fR<Unicode> (HubFactory.transport)
.IP
Default: 'tcp'
The 0MQ transport for communications.  This will likely be the default of
\&'tcp', but other values include 'ipc', 'epgm', 'inproc'.
.PP
\fB\-\-port=\fR<Int> (HubFactory.regport)
.IP
Default: 0
The port on which the Hub listens for registration.
.PP
\fB\-\-ping=\fR<Int> (HeartMonitor.period)
.IP
Default: 3000
The frequency at which the Hub pings the engines for heartbeats (in ms)
.PP
\fB\-\-scheme=\fR<Enum> (TaskScheduler.scheme_name)
.IP
Default: 'leastload'
Choices: ('leastload', 'pure', 'lru', 'plainrandom', 'weighted', 'twobin')
select the task scheduler scheme  [default: Python LRU] Options are: 'pure',
\&'lru', 'plainrandom', 'weighted', 'twobin','leastload'
.PP
\fB\-\-hwm=\fR<Int> (TaskScheduler.hwm)
.IP
Default: 1
specify the High Water Mark (HWM) for the downstream socket in the Task
scheduler. This is the maximum number of allowed outstanding tasks on each
engine.
The default (1) means that only one task can be outstanding on each engine.
Setting TaskScheduler.hwm=0 means there is no limit, and the engines
continue to be assigned tasks while they are working, effectively hiding
network latency behind computation, but can result in an imbalance of work
when submitting many heterogenous tasks all at once.  Any positive value
greater than one is a compromise between the two.
.PP
\fB\-\-profile\-dir=\fR<Unicode> (ProfileDir.location)
.IP
Default: ''
Set the profile location directly. This overrides the logic used by the
`profile` option.
.PP
\fB\-\-profile=\fR<Unicode> (BaseIPythonApplication.profile)
.IP
Default: 'default'
The IPython profile to use.
.PP
\fB\-\-ipython\-dir=\fR<Unicode> (BaseIPythonApplication.ipython_dir)
.IP
Default: ''
The name of the IPython directory. This directory is used for logging
configuration (through profiles), history storage, etc. The default is
usually $HOME/.ipython. This option can also be specified through the
environment variable IPYTHONDIR.
.PP
\fB\-\-log\-level=\fR<Enum> (Application.log_level)
.IP
Default: 30
Choices: (0, 10, 20, 30, 40, 50, 'DEBUG', 'INFO', 'WARN', 'ERROR', 'CRITICAL')
Set the log level by value or name.
.PP
\fB\-\-config=\fR<Unicode> (BaseIPythonApplication.extra_config_file)
.IP
Default: ''
Path to an extra config file to load.
If specified, load this config file in addition to any other IPython config.
.PP
\fB\-\-work\-dir=\fR<Unicode> (BaseParallelApplication.work_dir)
.IP
Default: '/home/joe'
Set the working dir for the process.
.PP
\fB\-\-log\-to\-file=\fR<Bool> (BaseParallelApplication.log_to_file)
.IP
Default: False
whether to log to a file
.PP
\fB\-\-clean\-logs=\fR<Bool> (BaseParallelApplication.clean_logs)
.IP
Default: False
whether to cleanup old logfiles before starting
.PP
\fB\-\-log\-url=\fR<Unicode> (BaseParallelApplication.log_url)
.IP
Default: ''
The ZMQ URL of the iplogger to aggregate logging.
.PP
\fB\-\-cluster\-id=\fR<Unicode> (BaseParallelApplication.cluster_id)
.IP
Default: ''
String id to add to runtime files, to prevent name collisions when using
multiple clusters with a single profile simultaneously.
When set, files will be named like: 'ipcontroller\-<cluster_id>\-engine.json'
Since this is text inserted into filenames, typical recommendations apply:
Simple character strings are ideal, and spaces are not recommended (but
should generally work).
.PP
\fB\-\-ident=\fR<CUnicode> (Session.session)
.IP
Default: ''
The UUID identifying this session.
.PP
\fB\-\-user=\fR<Unicode> (Session.username)
.IP
Default: 'joe'
Username for the Session. Default is your system username.
.PP
\fB\-\-keyfile=\fR<Unicode> (Session.keyfile)
.IP
Default: ''
path to file containing execution key.
.PP
To see all available configurables, use \fB\-\-help\-all\fR.
.SH EXAMPLES
.TP
ipcontroller \fB\-\-ip\fR=\fI\,192\/.168.0.1\fR \fB\-\-port\fR=\fI\,1000\/\fR
# listen on ip, port for engines
.TP
ipcontroller \fB\-\-scheme\fR=\fI\,pure\/\fR
# use the pure zeromq scheduler
